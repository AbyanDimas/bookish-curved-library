---
# Tasks untuk mendeploy aplikasi backend

- name: Update apt cache and install prerequisites
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: yes

- name: Add Docker GPG key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/trusted.gpg.d/docker.asc
    mode: '0644'
    force: true

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
    state: present

- name: Install Docker Engine
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: yes

- name: Start and enable Docker service
  ansible.builtin.service:
    name: docker
    state: started
    enabled: yes

- name: Add remote user to docker group
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes

- name: Install Nginx
  ansible.builtin.apt:
    name: nginx
    state: present
    update_cache: yes

- name: Configure Nginx as reverse proxy
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: /etc/nginx/sites-available/default

- name: Restart Nginx to apply changes
  ansible.builtin.service:
    name: nginx
    state: restarted

- name: Install git
  ansible.builtin.apt:
    name: git
    state: present

- name: Clone repository from GitHub
  ansible.builtin.git:
    repo: 'https://github.com/AbyanDimas/bookish-curved-library'
    dest: /home/{{ ansible_user }}/app
    version: main
    force: yes

- name: Build backend Docker image from Dockerfile
  community.docker.docker_image:
    name: books-library-backend
    build:
      path: /home/{{ ansible_user }}/app/backend
      dockerfile: Dockerfile
    source: build
    state: present

- name: Run backend container
  community.docker.docker_container:
    name: backend-app
    image: books-library-backend
    state: started
    recreate: yes
    pull: no
    ports:
      - "3000:3000"
    env:
      # URL database dibangun menggunakan variabel dari playbook dan environment.
      # Format: mysql://user:password@host:port/database
      DATABASE_URL: "mysql://root:{{ lookup('env', 'DB_ROOT_PASSWORD') }}@{{ db_host }}:3306/book_library"
      REDIS_URL: "{{ lookup('env', 'REDIS_URL', default='' ) }}" # Asumsi Redis akan ditambahkan nanti
